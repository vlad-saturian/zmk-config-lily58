/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        sub_caps_layer_activation {
            bindings = <&mo 4>;
            key-positions = <24 53>;
            layers = <0 2>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <20 19>;
            layers = <1>;
        };

        brace_right {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <20 21>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                              &kp N6  &kp N7            &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                               &kp Y   &kp U             &kp I      &kp O    &kp P     &kp BACKSLASH
&mo 1      &kp A   &kp S   &kp D     &kp F     &kp G                               &kp H   &kp J             &kp K      &kp L    &kp SEMI  &kp PIPE
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B   &mo 5        &kp BACKSPACE  &kp N   &kp M             &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LALT  &kp LGUI  &mo 2   &kp SPACE    &kp ENTER      &mo 3   &kp LEFT_CONTROL  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        caps_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp GRAVE           &kp RC(RA(RG(NUMBER_1)))  &kp RC(RA(RG(NUMBER_2)))  &kp RC(RA(RG(NUMBER_3)))  &kp RC(RA(RG(NUMBER_4)))  &kp RA(RC(RG(N5)))                               &trans      &trans            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans           &trans
&kp RC(DOWN_ARROW)  &kp LS(LEFT_ARROW)        &kp UP_ARROW              &kp LS(RIGHT_ARROW)       &kp RG(RC(RA(R)))         &kp RG(RC(RA(T)))                                &kp DOLLAR  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp LEFT_BRACE         &kp RIGHT_BRACE  &trans
&trans              &kp LEFT_ARROW            &kp DOWN_ARROW            &kp RIGHT_ARROW           &kp RC(RG(RA(F)))         &kp RA(RG(RC(G)))                                &kp EQUAL   &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES     &kp GRAVE              &kp UNDERSCORE   &kp TILDE
&trans              &trans                    &trans                    &kp BACKSPACE             &kp RA(RC(RG(V)))         &kp RA(RC(RG(B)))   &trans    &kp LS(BACKSPACE)  &kp STAR    &kp PLUS          &kp MINUS             &kp LBRC               &kp QUESTION     &trans
                                                                        &trans                    &trans                    &kp ENTER           &trans    &trans             &trans      &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&studio_unlock  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                      &kp F6       &kp F7     &kp F8     &kp F9    &kp F10    &kp F11
&trans          &kp NUMBER_0  &kp NUMBER_3  &kp NUMBER_2  &kp NUMBER_1  &kp F6                      &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &trans
&trans          &kp ENTER     &kp NUMBER_6  &kp NUMBER_5  &kp NUMBER_4  &kp F12                     &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&trans          &kp DOT       &kp NUMBER_9  &kp NUMBER_8  &kp NUMBER_7  &kp F11  &kp F10    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                                            &trans        &trans        &trans   &trans     &trans  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        higher_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans     &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans     &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &mkp MCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &msc SCRL_UP    &msc SCRL_DOWN  &trans           &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans     &trans          &trans
            >;
        };

        sub_caps_layer {
            bindings = <
&trans  &trans                      &trans                      &trans                       &trans                 &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                      &kp RG(RC(RA(UP_ARROW)))    &trans                       &trans                 &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp RA(RC(RG(LEFT_ARROW)))  &kp RA(RC(RG(DOWN_ARROW)))  &kp RA(RG(RC(RIGHT_ARROW)))  &kp RA(RC(RG(ENTER)))  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                      &trans                      &trans                       &trans                 &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                                &trans                       &trans                 &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        bluetooth_controls {
            bindings = <
&trans  &trans  &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans        &trans        &bt BT_CLR    &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                              &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
